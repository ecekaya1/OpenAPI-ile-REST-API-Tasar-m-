openapi: 3.0.3
info:
  title: University Library API
  version: 1.0.0
  description: >
    Bu API, bir üniversitenin çevrim içi kütüphane sistemi için kitap, öğrenci ve ödünç alma işlemlerini yönetir.
  contact:
    name: Library API Destek Ekibi
    email: support@universitylibrary.edu
servers:
  - url: https://api.universitylibrary.edu/v1
    description: Production server
tags:
  - name: books
    description: Kitap işlemleri
  - name: students
    description: Öğrenci işlemleri
  - name: loans
    description: Ödünç alma işlemleri
paths:
  /books:
    get:
      tags:
        - books
      summary: Tüm kitapları getir
      description: Kitap listesini getirir. Sayfalama desteklenir.
      parameters:
        - name: page
          in: query
          description: Sayfa numarası
          required: false
          schema:
            type: integer
            default: 1
        - name: size
          in: query
          description: Sayfa başına öğe sayısı
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Kitap listesi
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
              example:
                - id: "1e2f3a4b-1234-5678-90ab-cdef12345678"
                  title: "Sapiens"
                  author: "Yuval Noah Harari"
                  isbn: "978-1-234567-89-7"
                  publisher: "Penguin"
                  pageCount: 498
                  stock: 5
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - books
      summary: Yeni kitap ekle
      description: Yeni bir kitap kaydı oluşturur.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
            example:
              title: "The Alchemist"
              author: "Paulo Coelho"
              isbn: "978-0-123456-78-9"
              publisher: "HarperOne"
              pageCount: 208
              stock: 10
      responses:
        '201':
          description: Kitap başarıyla oluşturuldu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /books/{id}:
    get:
      tags:
        - books
      summary: Tek kitap getir
      description: ID’si verilen kitabın ayrıntılarını getirir.
      parameters:
        - name: id
          in: path
          required: true
          description: Kitap UUID’si
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Kitap ayrıntıları
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - books
      summary: Kitap bilgilerini güncelle
      description: ID’si verilen kitabın bilgilerini günceller.
      parameters:
        - name: id
          in: path
          required: true
          description: Kitap UUID’si
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Güncellenen kitap bilgileri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - books
      summary: Kitap sil
      description: ID’si verilen kitabı siler.
      parameters:
        - name: id
          in: path
          required: true
          description: Kitap UUID’si
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Başarıyla silindi
        '404':
          $ref: '#/components/responses/NotFound'

  /students:
    get:
      tags:
        - students
      summary: Tüm öğrencileri getir
      responses:
        '200':
          description: Öğrenci listesi
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
    post:
      tags:
        - students
      summary: Yeni öğrenci kaydı
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
            example:
              name: "Ali Veli"
              studentNumber: "20231234"
              email: "ali.veli@example.com"
              isActive: true
      responses:
        '201':
          description: Öğrenci oluşturuldu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          $ref: '#/components/responses/BadRequest'
  /students/{id}:
    get:
      tags:
        - students
      summary: Öğrenci ayrıntıları
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Öğrenci bilgileri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - students
      summary: Öğrenci bilgilerini güncelle
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Öğrenci güncellendi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - students
      summary: Öğrenci sil
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Başarıyla silindi
        '404':
          $ref: '#/components/responses/NotFound'

  /loans:
    get:
      tags:
        - loans
      summary: Tüm ödünç alma kayıtlarını getir
      responses:
        '200':
          description: Ödünç alma listesi
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Loan'
    post:
      tags:
        - loans
      summary: Kitap ödünç al
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
            example:
              studentId: "a1b2c3d4-5678-90ab-cdef-1234567890ab"
              bookId: "1e2f3a4b-1234-5678-90ab-cdef12345678"
              loanDate: "2025-05-26"
              status: "ongoing"
      responses:
        '201':
          description: Ödünç alma kaydı oluşturuldu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        '400':
          $ref: '#/components/responses/BadRequest'
  /loans/{id}:
    get:
      tags:
        - loans
      summary: Ödünç alma kaydını getir
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Ödünç alma kaydı
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        '404':
          $ref: '#/components/responses/NotFound'
  /loans/{id}/return:
    patch:
      tags:
        - loans
      summary: Kitabı iade et
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Kitap iade edildi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  schemas:
    Book:
      type: object
      required:
        - title
        - author
        - isbn
        - publisher
        - pageCount
        - stock
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        author:
          type: string
        isbn:
          type: string
          pattern: "^(?:\\d{3}-)?\\d{1,5}-\\d{1,7}-\\d{1,7}-\\d{1}$"
        publisher:
          type: string
        pageCount:
          type: integer
        stock:
          type: integer
    Student:
      type: object
      required:
        - name
        - studentNumber
        - email
        - isActive
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        studentNumber:
          type: string
        email:
          type: string
          format: email
        isActive:
          type: boolean
    Loan:
      type: object
      required:
        - studentId
        - bookId
        - loanDate
        - status
      properties:
        id:
          type: string
          format: uuid
        studentId:
          type: string
        bookId:
          type: string
        loanDate:
          type: string
          format: date
        returnDate:
          type: string
          format: date
          nullable: true
        status:
          type: string
          enum: [ongoing, returned, late]
  responses:
    BadRequest:
      description: Geçersiz istek
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              message:
                type: string
          example:
            error: "Bad Request"
            message: "İstek formatı hatalı"
    NotFound:
      description: Kayıt bulunamadı
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              message:
                type: string
          example:
            error: "Not Found"
            message: "Kayıt bulunamadı"
    InternalServerError:
      description: Sunucu hatası
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              message:
                type: string
          example:
            error: "Internal Server Error"
            message: "Sunucu hatası oluştu"
